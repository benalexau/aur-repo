name: Arch AUR Repository Build

on:
  push:
  pull_request:
  schedule:
    - cron:  '1 7 * * 0'

jobs:
  build-x86_64:
    runs-on: ubuntu-latest
    name: Build on x64_64
    container:
      image: archlinux:latest

      options: --privileged

      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
        AUR_ASROOT: 1
        PKGEXT: .pkg.tar.zst
        BUILD_PACKAGES: jellyfin-git ledger-udev ledger-live-bin paru brother-mfc-l8690cdw zoom google-chrome ipmiview jackett sonarr radarr pipman-git libedgetpu-std gasket-dkms shinobi-git archivemail reposilite laminar booster-git bacula-common bacula-client mtx-svn

    steps:
      - name: Set variables
        id: set-vars
        run: |
          echo "::set-output name=date::$(date +'%Y-%m-%d %H:%M')"
          echo "::set-output name=repo-id::$(echo ${{ github.repository }} | sed 's/\//-/g')"

      - name: Store private key
        id: gpg
        run: |
          echo "$GPG_PRIVATE_KEY" > ${GITHUB_WORKSPACE}/gpg.key

      - name: Build packages
        id: package
        run: |
          # Key imported and deleted early to avoid exposure during PKGBUILDs
          gpg --batch --import ${GITHUB_WORKSPACE}/gpg.key
          rm ${GITHUB_WORKSPACE}/gpg.key
          curl --output repo.key https://raw.githubusercontent.com/benalexau/aur-repo/master/repo.key
          pacman-key --init
          pacman-key --add repo.key
          pacman-key --lsign-key 71BDE43D3404BE41F65E5F640A5DAECE044E226C
          rm repo.key
          export REPO_IDENTIFIER="${{ steps.set-vars.outputs.repo-id }}"
          pacman -Syyu --noconfirm
          pacman -S base-devel --noconfirm
          sed -i 's,exit $E_ROOT,echo but you know what you do,' /usr/bin/makepkg
          cd /tmp
          curl --output aurutils.tar.gz https://aur.archlinux.org/cgit/aur.git/snapshot/aurutils.tar.gz
          tar xf aurutils.tar.gz
          cd aurutils
          makepkg --syncdeps --noconfirm
          pacman -U --noconfirm aurutils-*.pkg.tar.zst
          cp -v /tmp/aurutils/aurutils-*.pkg.tar.zst ${GITHUB_WORKSPACE}
          echo "::set-output name=arch::$(uname -m)"
          repo-add ${GITHUB_WORKSPACE}/${REPO_IDENTIFIER}.db.tar.gz ${GITHUB_WORKSPACE}/aurutils-*.pkg.tar.zst
          echo "setting up repo"
          echo "# local repository (required by aur tools to be set up)" >> /etc/pacman.conf
          echo "[${REPO_IDENTIFIER}]" >> /etc/pacman.conf
          echo "SigLevel = Optional TrustAll" >> /etc/pacman.conf
          echo "Server = file://${GITHUB_WORKSPACE} " >> /etc/pacman.conf
          curl --output bacula-key.asc https://www.bacula.org/downloads/Bacula-4096-Distribution-Verification-key.asc
          gpg --batch --import bacula-key.asc
          # photoprism depends on tensorflow115 so must be built separately
          aur sync --sign -A --noconfirm --noview --database ${REPO_IDENTIFIER} --root ${GITHUB_WORKSPACE} photoprism
          pacman -Rs tensorflow115 --noconfirm
          pacman -S python-pip python-tensorflow python-pillow --noconfirm
          aur sync --sign -A --noconfirm --noview --database ${REPO_IDENTIFIER} --root ${GITHUB_WORKSPACE} $BUILD_PACKAGES

      - name: Remove symbolic links
        run: |
          cd ${GITHUB_WORKSPACE}
          ls -al
          rm -v ${{ steps.set-vars.outputs.repo-id }}.db ${{ steps.set-vars.outputs.repo-id }}.files
          cp -v ${{ steps.set-vars.outputs.repo-id }}.db.tar.gz ${{ steps.set-vars.outputs.repo-id }}.db
          cp -v ${{ steps.set-vars.outputs.repo-id }}.files.tar.gz ${{ steps.set-vars.outputs.repo-id }}.files
          rm -fv build-log.txt *.sh
          ls -al

      - name: Remove release
        uses: kopp/action-delete-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package.outputs.arch }}

      - name: Upload release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package.outputs.arch }}
          name: Arch Linux AUR Build ${{ github.run_number }} from ${{ steps.set-vars.outputs.date }} for ${{ steps.package.outputs.arch }}
          body: |
            To use this repository, please append the following to `/etc/pacman.conf`:
            ```
            [${{ steps.set-vars.outputs.repo-id }}]
            SigLevel = Required
            Server = https://github.com/${{ github.repository }}/releases/download/${{ steps.package.outputs.arch }}
            ```
            You must also trust the signing key:
            ```
            sudo pacman-key --recv-keys 71BDE43D3404BE41F65E5F640A5DAECE044E226C --keyserver hkp://keyserver.ubuntu.com
            sudo pacman-key --lsign-key 71BDE43D3404BE41F65E5F640A5DAECE044E226C
            ```
          files: |
            ${{ github.workspace }}/*
          draft: false
          prerelease: false

  build-arm:
    runs-on: ubuntu-latest
    name: Build on ${{ matrix.arch }}

    env:
      GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

    strategy:
      matrix:
        include:
          - arch: aarch64
          - arch: armv7

    steps:
      - name: Set variables
        id: set-vars
        run: |
          echo "::set-output name=date::$(date +'%Y-%m-%d %H:%M')"
          echo "::set-output name=repo-id::$(echo ${{ github.repository }} | sed 's/\//-/g')"

      - name: Store private key
        id: gpg
        run: |
          echo "$GPG_PRIVATE_KEY" > ${{ runner.temp }}/gpg.key

      - name: Build packages
        id: package
        uses: uraimo/run-on-arch-action@v2.0.10
        with:
          arch: ${{ matrix.arch }}
          distro: archarm_latest

          githubToken: ${{ secrets.GITHUB_TOKEN }}

          dockerRunArgs: |
            --volume "${{ runner.temp }}:/workspace"

          env: |
            AUR_ASROOT: 1
            PKGEXT: .pkg.tar.zst
            REPO_IDENTIFIER: ${{ steps.set-vars.outputs.repo-id }}
            INSTALL_PACKAGES: jre11-openjdk-headless
            BUILD_PACKAGES: openhab3 openhab3-addons msntp bacula-client

          shell: /bin/sh

          run: |
            # Key imported and deleted early to avoid exposure during PKGBUILDs
            gpg --batch --import /workspace/gpg.key
            rm /workspace/gpg.key
            curl --output repo.key https://raw.githubusercontent.com/benalexau/aur-repo/master/repo.key
            pacman-key --init
            pacman-key --add repo.key
            pacman-key --lsign-key 71BDE43D3404BE41F65E5F640A5DAECE044E226C
            rm repo.key
            pacman -Syyu --noconfirm
            pacman -S base-devel --noconfirm
            pacman -S ${INSTALL_PACKAGES} --noconfirm
            sed -i 's,exit $E_ROOT,echo but you know what you do,' /usr/bin/makepkg
            cd /tmp
            curl --output aurutils.tar.gz https://aur.archlinux.org/cgit/aur.git/snapshot/aurutils.tar.gz
            tar xf aurutils.tar.gz
            cd aurutils
            makepkg --syncdeps --noconfirm
            pacman -U --noconfirm aurutils-*.pkg.tar.zst
            cp -v /tmp/aurutils/aurutils-*.pkg.tar.zst /workspace
            echo "::set-output name=arch::$(uname -m)"
            repo-add /workspace/${REPO_IDENTIFIER}.db.tar.gz /workspace/aurutils-*.pkg.tar.zst
            echo "setting up repo"
            echo "# local repository (required by aur tools to be set up)" >> /etc/pacman.conf
            echo "[${REPO_IDENTIFIER}]" >> /etc/pacman.conf
            echo "SigLevel = Optional TrustAll" >> /etc/pacman.conf
            echo "Server = file:///workspace " >> /etc/pacman.conf
            curl --output bacula-key.asc https://www.bacula.org/downloads/Bacula-4096-Distribution-Verification-key.asc
            gpg --batch --import bacula-key.asc
            pacman -Q
            aur sync --sign -A --noconfirm --noview --database ${REPO_IDENTIFIER} --root /workspace $BUILD_PACKAGES

      - name: Remove symbolic links
        run: |
          cd "${{ runner.temp }}"
          ls -al
          rm -v ${{ steps.set-vars.outputs.repo-id }}.db ${{ steps.set-vars.outputs.repo-id }}.files
          cp -v ${{ steps.set-vars.outputs.repo-id }}.db.tar.gz ${{ steps.set-vars.outputs.repo-id }}.db
          cp -v ${{ steps.set-vars.outputs.repo-id }}.files.tar.gz ${{ steps.set-vars.outputs.repo-id }}.files
          rm -fv build-log.txt *.sh
          ls -al

      - name: Remove release
        uses: kopp/action-delete-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package.outputs.arch }}

      - name: Upload release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package.outputs.arch }}
          name: Arch Linux ARM AUR Build ${{ github.run_number }} from ${{ steps.set-vars.outputs.date }} for ${{ steps.package.outputs.arch }}
          body: |
            To use this repository, please append the following to `/etc/pacman.conf`:
            ```
            [${{ steps.set-vars.outputs.repo-id }}]
            SigLevel = Required
            Server = https://github.com/${{ github.repository }}/releases/download/${{ steps.package.outputs.arch }}
            ```
            You must also trust the signing key:
            ```
            sudo pacman-key --recv-keys 71BDE43D3404BE41F65E5F640A5DAECE044E226C --keyserver hkp://keyserver.ubuntu.com
            sudo pacman-key --lsign-key 71BDE43D3404BE41F65E5F640A5DAECE044E226C
            ```
          files: |
            ${{ runner.temp }}/*
          draft: false
          prerelease: false
